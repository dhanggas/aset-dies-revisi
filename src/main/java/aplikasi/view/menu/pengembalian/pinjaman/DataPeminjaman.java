/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplikasi.view.menu.pengembalian.pinjaman;

import aplikasi.config.KoneksiDB;
import aplikasi.config.ValueFormatter;
import aplikasi.controller.TableViewController;
import aplikasi.entity.Peminjaman;
import aplikasi.repository.RepoPeminjaman;
import aplikasi.service.ServicePeminjaman;
import aplikasi.view.menu.aset.DaftarAsetView;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author dhiskar
 */
public class DataPeminjaman extends javax.swing.JDialog {

    private final DataPengembalianView pengembalianController;
    private final TableViewController tableController;
    private final RepoPeminjaman repoPeminjaman;
    private List<Peminjaman> daftarPeminjaman = new ArrayList<>();

    /**
     * Creates new form DataPembelianDariPesananDetailBarangView
     *
     * @param parent
     */
    DataPeminjaman(java.awt.Frame parent, DataPengembalianView pengembalianController, boolean modal) {
        super(parent, modal);
        initComponents();
        this.pengembalianController = pengembalianController;
        this.repoPeminjaman = new ServicePeminjaman(KoneksiDB.getDataSource());
        this.tableController = new TableViewController(tableView);
        refreshDataTables();
    }

    public void refreshDataTables() {
        try {
            tableController.clearData();
            this.daftarPeminjaman = repoPeminjaman.findPeminjamanByStatus();
            for (Peminjaman pinjam : daftarPeminjaman) {
                Object[] row = {pinjam.getKode(), pinjam.getPembawa(), ValueFormatter.getLocalDateShort(pinjam.getTanggal().toLocalDate())};
                tableController.getModel().addRow(row);
            }
            tableController.setContentTableAlignment( Arrays.asList(0, 1, 2));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Tidak dapat mendapatkan data aset", getTitle(), JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(DaftarAsetView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        pmnuTambah = new javax.swing.JMenuItem();
        jToolBar1 = new javax.swing.JToolBar();
        btnTambah = new javax.swing.JButton();
        btnSelesai = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableView = new javax.swing.JTable();

        pmnuTambah.setText("Pilih");
        pmnuTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmnuTambahActionPerformed(evt);
            }
        });
        jPopupMenu1.add(pmnuTambah);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pilih Data Peminjaman");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo3.png")).getImage());

        jToolBar1.setRollover(true);

        btnTambah.setText("Pilih");
        btnTambah.setToolTipText("Anda bisa memilih dengan mengklik dua kali pada barais yang di pilih");
        btnTambah.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTambah.setMaximumSize(new java.awt.Dimension(120, 35));
        btnTambah.setMinimumSize(new java.awt.Dimension(120, 35));
        btnTambah.setPreferredSize(new java.awt.Dimension(120, 35));
        btnTambah.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        jToolBar1.add(btnTambah);

        btnSelesai.setText("Selesai");
        btnSelesai.setFocusable(false);
        btnSelesai.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSelesai.setMaximumSize(new java.awt.Dimension(120, 35));
        btnSelesai.setMinimumSize(new java.awt.Dimension(120, 35));
        btnSelesai.setPreferredSize(new java.awt.Dimension(120, 35));
        btnSelesai.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSelesai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelesaiActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSelesai);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_END);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(" "));
        jPanel1.setToolTipText("");

        tableView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Kode", "Pembawa", "Tanggal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableView.setToolTipText("");
        tableView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableViewMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableViewMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableView);
        if (tableView.getColumnModel().getColumnCount() > 0) {
            tableView.getColumnModel().getColumn(0).setPreferredWidth(120);
            tableView.getColumnModel().getColumn(0).setMaxWidth(120);
            tableView.getColumnModel().getColumn(2).setPreferredWidth(120);
            tableView.getColumnModel().getColumn(2).setMaxWidth(120);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelesaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelesaiActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSelesaiActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        if (tableController.isSelected()) {
            Peminjaman pinjam = daftarPeminjaman.get(tableController.getRowSelected());
            pengembalianController.pilihPeminjaman(pinjam);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Data belum dipilih", getTitle(), JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void pmnuTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmnuTambahActionPerformed
        btnTambahActionPerformed(evt);
    }//GEN-LAST:event_pmnuTambahActionPerformed

    private void tableViewMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableViewMouseReleased
        if (evt.isPopupTrigger()) {
            JTable source = (JTable) evt.getSource();
            int row = source.rowAtPoint(evt.getPoint());
            int column = source.columnAtPoint(evt.getPoint());
            if (!source.isRowSelected(row)) {
                source.changeSelection(row, column, false, false);
            }
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
        } 
    }//GEN-LAST:event_tableViewMouseReleased

    private void tableViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableViewMouseClicked
        if (evt.getClickCount() == 2){
            Peminjaman pinjam = daftarPeminjaman.get(tableController.getRowSelected());
            pengembalianController.pilihPeminjaman(pinjam);
            this.dispose();
        }
    }//GEN-LAST:event_tableViewMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelesai;
    private javax.swing.JButton btnTambah;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem pmnuTambah;
    private javax.swing.JTable tableView;
    // End of variables declaration//GEN-END:variables
}
