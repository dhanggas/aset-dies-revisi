/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplikasi.view.menu.aset;

import aplikasi.config.FieldLimit;
import aplikasi.config.FieldMinimal;
import aplikasi.config.KoneksiDB;
import aplikasi.config.ValueFormatter;
import aplikasi.entity.Aset;
import aplikasi.entity.KategoriAset;
import aplikasi.entity.Kepemilikan;
import aplikasi.entity.LokasiAset;
import aplikasi.entity.StatusAset;
import aplikasi.entity.Users;
import aplikasi.repository.RepoAset;
import aplikasi.repository.RepoKategoriAset;
import aplikasi.repository.RepoKepemilikan;
import aplikasi.repository.RepoLokasiAset;
import aplikasi.repository.RepoStatusAset;
import aplikasi.service.ServiceAset;
import aplikasi.service.ServiceKategoriAset;
import aplikasi.service.ServiceKepemilikan;
import aplikasi.service.ServiceLokasiAset;
import aplikasi.service.ServiceStatusAset;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author soraya
 */
public class DataAsetView extends javax.swing.JDialog {

    private Boolean update;

    private final RepoAset repoAset = new ServiceAset(KoneksiDB.getDataSource());
    private final RepoKategoriAset repoKategori = new ServiceKategoriAset(KoneksiDB.getDataSource());
    private final RepoStatusAset repoStatus = new ServiceStatusAset(KoneksiDB.getDataSource());
    private final RepoLokasiAset repoLokasi = new ServiceLokasiAset(KoneksiDB.getDataSource());
    private final RepoKepemilikan repoKepemilikan = new ServiceKepemilikan(KoneksiDB.getDataSource());

    private List<KategoriAset> daftarKategori = new ArrayList<>();
    private List<StatusAset> daftarStatus = new ArrayList<>();
    private List<LokasiAset> daftarLokasi = new ArrayList<>();
    private List<Kepemilikan> daftarKepemilikan = new ArrayList<>();

    private DaftarAsetView daftarAsetController = null;
    private KategoriAset kategoriAset;
    private Aset aset;
    private FieldMinimal jTextFieldMinimal;
    private Users p = null;

    public Boolean isUpdate() {
        return update;
    }

    public void setUpdate(Boolean update) {
        this.update = update;
    }

    /**
     * Creates new form DataAsetView
     */
    public DataAsetView(java.awt.Frame parent, boolean modal, Users p) {
        super(parent, modal);
        initComponents();
        setUpdate(false);
        this.daftarAsetController = null;
        this.aset = new Aset();
        this.p = p;
        this.jTextFieldMinimal = new FieldMinimal();
        this.txtTanggal.setDate(new java.util.Date());
        txtNama.requestFocus();
        ambilKodeAset();
        refresDataKategoriAset();
        refresDataStatus();
        refresDataLokasi();
        refresDataCustomer();
        textFieldLimit();
    }

    DataAsetView(java.awt.Frame parent, DaftarAsetView daftarAsetController, boolean modal, Users p) {
        super(parent, modal);
        initComponents();
        setUpdate(false);
        this.daftarAsetController = daftarAsetController;
        this.aset = new Aset();
        this.p = p;
        this.jTextFieldMinimal = new FieldMinimal();
        this.txtTanggal.setDate(new java.util.Date());
        txtNama.requestFocus();
        ambilKodeAset();
        refresDataKategoriAset();
        refresDataStatus();
        refresDataLokasi();
        refresDataCustomer();
        textFieldLimit();
    }

    DataAsetView(java.awt.Frame parent, DaftarAsetView daftarAsetController, Aset aset, boolean modal, Users p) {
        super(parent, modal);
        initComponents();
        setUpdate(true);
        this.daftarAsetController = daftarAsetController;
        this.aset = aset;
        this.p = p;
        this.jTextFieldMinimal = new FieldMinimal();
        this.txtTanggal.setDate(new java.util.Date());
        txtNama.requestFocus();
        refresDataKategoriAset();
        refresDataStatus();
        refresDataLokasi();
        refresDataCustomer();
        textFieldLimit();
        setFields(aset);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jenisSatuanGroup = new javax.swing.ButtonGroup();
        jToolBar1 = new javax.swing.JToolBar();
        btnSimpan = new javax.swing.JButton();
        btnKembali = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtKode = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        rbSet = new javax.swing.JRadioButton();
        rbPcs = new javax.swing.JRadioButton();
        txtStatus = new javax.swing.JComboBox();
        txtLokasi = new javax.swing.JComboBox();
        txtKepemilikan = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cboUbah = new javax.swing.JCheckBox();
        txtKodeKategori = new javax.swing.JComboBox<String>();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTanggal = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Aset");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo3.png")).getImage());

        jToolBar1.setRollover(true);

        btnSimpan.setText("Simpan");
        btnSimpan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSimpan.setMaximumSize(new java.awt.Dimension(120, 35));
        btnSimpan.setMinimumSize(new java.awt.Dimension(120, 35));
        btnSimpan.setPreferredSize(new java.awt.Dimension(120, 35));
        btnSimpan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        btnSimpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSimpanKeyPressed(evt);
            }
        });
        jToolBar1.add(btnSimpan);

        btnKembali.setText("Kembali");
        btnKembali.setFocusable(false);
        btnKembali.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKembali.setMaximumSize(new java.awt.Dimension(120, 35));
        btnKembali.setMinimumSize(new java.awt.Dimension(120, 35));
        btnKembali.setPreferredSize(new java.awt.Dimension(120, 35));
        btnKembali.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });
        jToolBar1.add(btnKembali);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_END);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Aset"));
        jPanel1.setToolTipText("");

        jLabel1.setText("Kode");

        jLabel2.setText("Nama");

        txtKode.setEditable(false);
        txtKode.setFocusable(false);

        txtNama.setToolTipText("Isi dengan nama aset  minimal 4 karakter dan maximal 50 karakter");
        txtNama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNamaKeyReleased(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Keterangan"));

        jLabel7.setText("Status");

        jLabel8.setText("Nomor Rak");

        jLabel9.setText("Kepemilikan");

        jenisSatuanGroup.add(rbSet);
        rbSet.setSelected(true);
        rbSet.setText("UNIT");
        rbSet.setFocusable(false);

        jenisSatuanGroup.add(rbPcs);
        rbPcs.setText("PCS");
        rbPcs.setFocusable(false);

        txtStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtLokasi.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtKepemilikan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setText("Quantity");

        txtQty.setEditable(false);
        txtQty.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtQty.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQty.setText("1");
        txtQty.setToolTipText("");
        txtQty.setFocusable(false);

        jLabel11.setText("Satuan");

        cboUbah.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cboUbah.setText("Ubah Quantity");
        cboUbah.setEnabled(false);
        cboUbah.setFocusable(false);
        cboUbah.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboUbahItemStateChanged(evt);
            }
        });

        txtKodeKategori.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtKodeKategori.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtKodeKategoriItemStateChanged(evt);
            }
        });

        jLabel5.setText("Kategori");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cboUbah))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(rbSet)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rbPcs, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtKepemilikan, 0, 216, Short.MAX_VALUE)
                        .addComponent(txtStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtLokasi, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtKodeKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKodeKategori, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLokasi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKepemilikan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboUbah))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSet)
                    .addComponent(rbPcs)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel3.setText("Tanggal");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(136, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtKode, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNama, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void textFieldLimit() {
        txtNama.setDocument(new FieldLimit(50));
    }

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if (!jTextFieldMinimal.setMinInputValue(txtNama.getText(), 4)) {
            JOptionPane.showMessageDialog(this, "Nama minimal 4 karakter !");
            txtNama.requestFocus();
            txtNama.selectAll();
        } else {
            aset.setNama(txtNama.getText());
            aset.setTanggal(Date.valueOf(ValueFormatter.getDateSQL(txtTanggal.getDate())));
            aset.setKategoriAset(daftarKategori.get(txtKodeKategori.getSelectedIndex()));
            aset.setStatusAset(daftarStatus.get(txtStatus.getSelectedIndex()));
            aset.setLokasiAset(daftarLokasi.get(txtLokasi.getSelectedIndex()));
            aset.setKepemilikan(daftarKepemilikan.get(txtKepemilikan.getSelectedIndex()));
            aset.setQty(Integer.valueOf(txtQty.getText()));
            if (rbSet.isSelected()) {
                aset.setSatuan("UNIT");
            } else {
                aset.setSatuan("PCS");
            }
            aset.setUsers(p);
            if (isUpdate()) {
                try {
                    repoAset.update(aset);
                    this.dispose();
                    if (daftarAsetController != null) {
                        daftarAsetController.refreshDataTablesByName();
                        daftarAsetController.setFields(aset);
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Tidak dapat merubah data barang", getTitle(), JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(DataAsetView.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    repoAset.save(aset);
                    if (daftarAsetController != null) {
                        daftarAsetController.refreshDataTablesByName();
                        daftarAsetController.setFields(aset);
                        daftarAsetController.selectLastRow();
                        daftarAsetController.btnTambahRequesFocus();
                    }
                    this.dispose();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Tidak dapat menyimpan data barang baru", getTitle(), JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(DataAsetView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_btnSimpanActionPerformed
    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void txtKodeKategoriItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtKodeKategoriItemStateChanged
//        if (txtKodeKategori.getSelectedIndex() >= 0) {
//            kategoriAset = daftarKategori.get(txtKodeKategori.getSelectedIndex());
//            txtNamKategori.setText(kategoriAset.getNama_kategori());
//        } else {
//            txtNamKategori.setText("");
//        }
    }//GEN-LAST:event_txtKodeKategoriItemStateChanged

    private void cboUbahItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboUbahItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            txtQty.setEnabled(true);
            txtQty.requestFocus();
            txtQty.selectAll();
        } else {
            txtQty.setEnabled(false);
        }
    }//GEN-LAST:event_cboUbahItemStateChanged

    private void btnSimpanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSimpanKeyPressed
        if (evt.getKeyCode()== KeyEvent.VK_ENTER) {
            btnSimpanActionPerformed(null);
        }
    }//GEN-LAST:event_btnSimpanKeyPressed

    private void txtNamaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNamaKeyReleased
        txtNama.setText(txtNama.getText().toUpperCase());
    }//GEN-LAST:event_txtNamaKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JCheckBox cboUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.ButtonGroup jenisSatuanGroup;
    private javax.swing.JRadioButton rbPcs;
    private javax.swing.JRadioButton rbSet;
    private javax.swing.JComboBox txtKepemilikan;
    private javax.swing.JTextField txtKode;
    private javax.swing.JComboBox<String> txtKodeKategori;
    private javax.swing.JComboBox txtLokasi;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtQty;
    private javax.swing.JComboBox txtStatus;
    private com.toedter.calendar.JDateChooser txtTanggal;
    // End of variables declaration//GEN-END:variables

    private void refresDataKategoriAset() {
        try {
            txtKodeKategori.removeAllItems();
            daftarKategori = repoKategori.findAll();
            for (KategoriAset ka : daftarKategori) {
                txtKodeKategori.addItem(ka.getNama_kategori());
            }
        } catch (SQLException ex) {
            Logger.getLogger(DataAsetView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void refresDataStatus() {
        try {
            txtStatus.removeAllItems();
            daftarStatus = repoStatus.findAll();
            for (StatusAset ds : daftarStatus) {
                txtStatus.addItem(ds.getStatus());
            }
        } catch (SQLException ex) {
            Logger.getLogger(DataAsetView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void refresDataCustomer() {
        try {
            txtKepemilikan.removeAllItems();
            daftarKepemilikan = repoKepemilikan.findAll();
            for (Kepemilikan ds : daftarKepemilikan) {
                txtKepemilikan.addItem(ds.getNama());
            }
        } catch (SQLException ex) {
            Logger.getLogger(DataAsetView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void refresDataLokasi() {
        try {
            txtLokasi.removeAllItems();
            daftarLokasi = repoLokasi.findAll();
            for (LokasiAset ds : daftarLokasi) {
                txtLokasi.addItem(ds.getNama_rak());
            }
        } catch (SQLException ex) {
            Logger.getLogger(DataAsetView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setFields(Aset aset) {
        String vSatuan = "UNIT";
        txtKode.setText(aset.getKode());
        txtNama.setText(aset.getNama());
        txtKodeKategori.setSelectedItem(aset.getKategoriAset().getNama_kategori());
        txtStatus.setSelectedItem(aset.getStatusAset().getStatus());
        txtLokasi.setSelectedItem(aset.getLokasiAset().getNama_rak());
        txtKepemilikan.setSelectedItem(aset.getKepemilikan().getNama());
        txtQty.setText(aset.getQty().toString());
        if (aset.getSatuan().equals(vSatuan)) {
            rbSet.setSelected(true);
        } else {
            rbPcs.setSelected(true);
        }
    }

    private void ambilKodeAset() {
        try {
            String s = null;
            StringBuilder sb = new StringBuilder("MD").append("-");
            List<Aset> daftarAset = repoAset.findMaxValue();
            if (!daftarAset.isEmpty()) {
                for (Aset aset1 : daftarAset) {
                    s = aset1.getKode();
                }
                String s2 = s.substring(3);
                int s3 = Integer.valueOf(s2) + 1;
                sb.append(String.format("%04d", s3));
                this.aset.setKode(sb.toString());
                txtKode.setText(this.aset.getKode());
            } else {
                this.aset.setKode("MD-0001");
                txtKode.setText(this.aset.getKode());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Tidak dapat mendapatkan kode!", getTitle(), JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(DataAsetView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
