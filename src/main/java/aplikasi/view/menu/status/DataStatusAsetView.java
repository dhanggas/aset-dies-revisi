/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aplikasi.view.menu.status;

import aplikasi.config.FieldLimit;
import aplikasi.config.FieldMinimal;
import aplikasi.config.KoneksiDB;
import aplikasi.entity.StatusAset;
import aplikasi.repository.RepoStatusAset;
import aplikasi.service.ServiceStatusAset;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author dhiskar
 */
public class DataStatusAsetView extends javax.swing.JDialog {

    private List<StatusAset> daftarStatusAsets = new ArrayList<>();

    private DaftarStatusView daftarStatusViewController = null;
    private final StatusAset statusAset;
    private final RepoStatusAset repoStatusAset = new ServiceStatusAset(KoneksiDB.getDataSource());
    private Boolean update;
    private FieldMinimal jTextFieldMinimal;

    public Boolean isUpdate() {
        return update;
    }

    public void setUpdate(Boolean update) {
        this.update = update;
    }

    /**
     * Creates new form DataKategoriAsetView
     *
     * @param parent
     * @param modal
     */
    public DataStatusAsetView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setUpdate(false);
        this.daftarStatusViewController = null;
        this.statusAset = new StatusAset();
        this.jTextFieldMinimal = new FieldMinimal();
        textFieldLimit();
        ambilIdTerbesar();
        txtNama.requestFocus();
    }

    DataStatusAsetView(java.awt.Frame parent, DaftarStatusView daftarStatusViewController, boolean modal) {
        super(parent, modal);
        initComponents();
        setUpdate(false);
        this.daftarStatusViewController = daftarStatusViewController;
        this.statusAset = new StatusAset();
        this.jTextFieldMinimal = new FieldMinimal();
        textFieldLimit();
        ambilIdTerbesar();
        txtNama.requestFocus();
    }

    DataStatusAsetView(java.awt.Frame parent, DaftarStatusView daftarStatusViewController, StatusAset statusAset, boolean b) {
        super(parent, b);
        initComponents();
        setUpdate(true);
        this.daftarStatusViewController = daftarStatusViewController;
        textFieldLimit();
        this.statusAset = new StatusAset();
        this.jTextFieldMinimal = new FieldMinimal();
        setFilds(statusAset);
        txtNama.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnSimpan = new javax.swing.JButton();
        btnKembali = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtKode = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Status");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/gambar/logo3.png")).getImage());

        jToolBar1.setRollover(true);

        btnSimpan.setText("Simpan");
        btnSimpan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSimpan.setMaximumSize(new java.awt.Dimension(120, 35));
        btnSimpan.setMinimumSize(new java.awt.Dimension(120, 35));
        btnSimpan.setPreferredSize(new java.awt.Dimension(120, 35));
        btnSimpan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        btnSimpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnSimpanKeyReleased(evt);
            }
        });
        jToolBar1.add(btnSimpan);

        btnKembali.setText("Kembali");
        btnKembali.setFocusable(false);
        btnKembali.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKembali.setMaximumSize(new java.awt.Dimension(120, 35));
        btnKembali.setMinimumSize(new java.awt.Dimension(120, 35));
        btnKembali.setPreferredSize(new java.awt.Dimension(120, 35));
        btnKembali.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });
        jToolBar1.add(btnKembali);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_END);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Status Aset"));
        jPanel1.setToolTipText("");

        jLabel1.setText("Kode");

        jLabel2.setText("Nama");

        txtKode.setEditable(false);
        txtKode.setFocusable(false);

        txtNama.setToolTipText("Nama minimal 4 karakter, maximal 30 karakter dan hanya huruf");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtKode, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNama, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void textFieldLimit() {
        txtNama.setDocument(new FieldLimit(30));
    }
    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        if (!jTextFieldMinimal.setMinInputValue(txtNama.getText(), 4) || !jTextFieldMinimal.setOnlyLetter(txtNama.getText())) {
            JOptionPane.showMessageDialog(this, "Nama minimal 4 karakter dan hanya huruf !");
            txtNama.requestFocus();
            txtNama.selectAll();

        } else {
            statusAset.setId(Integer.valueOf(txtKode.getText()));
            statusAset.setStatus(txtNama.getText());
            if (isUpdate()) {
                try {
                    repoStatusAset.update(statusAset);
                    this.dispose();
                    if (daftarStatusViewController != null) {
                        daftarStatusViewController.refreshDataTableByName();
                        daftarStatusViewController.setFiels(statusAset);
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Tidak dapat melakukan update data status aset", getTitle(), JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(DataStatusAsetView.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    repoStatusAset.save(statusAset);
                    this.dispose();
                    if (daftarStatusViewController != null) {
                        daftarStatusViewController.refreshDataTableByName();
                        daftarStatusViewController.setFiels(statusAset);
                        daftarStatusViewController.selectLastRow();
                        daftarStatusViewController.btnTambahRequesFocus();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(DataStatusAsetView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void btnSimpanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSimpanKeyReleased
        if (evt.getKeyCode()== KeyEvent.VK_ENTER) {
            btnSimpanActionPerformed(null);
        }
    }//GEN-LAST:event_btnSimpanKeyReleased

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField txtKode;
    private javax.swing.JTextField txtNama;
    // End of variables declaration//GEN-END:variables

    private void setFilds(StatusAset statusAset) {
        txtKode.setText(statusAset.getId().toString());
        txtNama.setText(statusAset.getStatus());
    }

    private void ambilIdTerbesar() {

        try {
            daftarStatusAsets = repoStatusAset.findMaxValue();
            if (daftarStatusAsets.size() != 0) {
                for (StatusAset p : daftarStatusAsets) {
                    int i = p.getId() + 1;
                    txtKode.setText(String.valueOf(i));
                }
            } else {
                txtKode.setText("1");
            }

        } catch (Exception e) {
            Logger.getLogger(DataStatusAsetView.class.getName()).log(Level.SEVERE, null, e);

        }

    }

}
